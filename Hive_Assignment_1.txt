1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

2.Store raw data into hdfs location
Ans: hadoop fs -put "/config/workspace/sales_order_data.csv" "/tmp/sales_order_data.csv"

3:Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .
  Make sure to skip header row while creating table
Ans:

CREATE TABLE sales_order_csv
(
ORDERNUMBER   int   ,
QUANTITYORDERED   int   ,
PRICEEACH   float   ,
ORDERLINENUMBER   int   ,
SALES   float   ,
STATUS   string   ,
QTR_ID   int   ,
MONTH_ID   int   ,
YEAR_ID   smallint   ,
PRODUCTLINE   string   ,
MSRP   int   ,
PRODUCTCODE   string   ,
PHONE   string   ,
CITY   string   ,
STATE   string   ,
POSTALCODE   string   ,
COUNTRY   string   ,
TERRITORY   string   ,
CONTACTLASTNAME   string   ,
CONTACTFIRSTNAME   string   ,
DEALSIZE   string
)
row format delimited
fields terminated by ","
tblproperties ("skip.header.line.count" = "1");


4. Load data from hdfs path into "sales_order_csv" 
Ans:
load data inpath "/tmp/sales_order_data.csv" into table sales_order_csv;

5. Create an internal hive table which will store data in ORC format "sales_order_orc"
Ans:
CREATE TABLE sales_order_orc
(
ORDERNUMBER   int   ,
QUANTITYORDERED   int   ,
PRICEEACH   float   ,
ORDERLINENUMBER   int   ,
SALES   float   ,
STATUS   string   ,
QTR_ID   int   ,
MONTH_ID   int   ,
YEAR_ID   smallint   ,
PRODUCTLINE   string   ,
MSRP   int   ,
PRODUCTCODE   string   ,
PHONE   string   ,
CITY   string   ,
STATE   string   ,
POSTALCODE   string   ,
COUNTRY   string   ,
TERRITORY   string   ,
CONTACTLASTNAME   string   ,
CONTACTFIRSTNAME   string   ,
DEALSIZE   string
)
stored as orc;



6. Load data from "sales_order_csv" into "sales_order_orc"
Ans:
    from sales_order_csv insert overwrite table sales_order_orc select *;


Perform below menioned queries on "sales_order_orc" table :

a. Calculatye total sales per year
    Ans:
        select year_id,sum(sales) from sales_order_orc group by year_id;


b. Find a product for which maximum orders were placed
    Ans:
        select productcode 
        from 
        (
            select PRODUCTCODE,count(1) as count_of_orders 
            from sales_order_orc
            group by PRODUCTCODE
        ) temp
        order by temp.count_of_orders desc
        limit 1;



c. Calculate the total sales for each quarter
    Ans:
        select QTR_ID,sum(sales) as total_sales
        from sales_order_orc
        group by  QTR_ID;

d. In which quarter sales was minimum
    Ans:
        select QTR_ID
        from 
        (
        select QTR_ID,sum(sales) as total_sales
        from sales_order_orc
        group by  QTR_ID
        )temp
        order by total_sales asc
        limit 1
        ;


e. In which country sales was maximum and in which country sales was minimum
    Ans:
        select country,sum(sales) as total_sales
        from sales_order_orc
        group by country
        order by total_sales asc limit 1
        union 
        select country,sum(sales) as total_sales
        from sales_order_orc
        group by country
        order by total_sales asc limit 1


f. Calculate quartelry sales for each city
    Ans:
        select CITY,QTR_ID,sum(sales) as total_sales
        from sales_order_orc
        group by  CITY,QTR_ID;

h. Find a month for each year in which maximum number of quantities were sold

    Ans:
        select year_id,MONTH_ID
        from
        (
        select 
        year_id,
        MONTH_ID,
        sum(QUANTITYORDERED) as qty_sold,
        row_number() over(partition by year_id order by qty_sold desc) as rnk
        from sales_order_orc
        group by year_id,MONTH_ID
        )temp 
        where rnk=1;